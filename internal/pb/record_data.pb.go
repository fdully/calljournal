// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: record_data.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SaveRecordDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*SaveRecordDataRequest_Info
	//	*SaveRecordDataRequest_RecordChunk
	Data isSaveRecordDataRequest_Data `protobuf_oneof:"data"`
}

func (x *SaveRecordDataRequest) Reset() {
	*x = SaveRecordDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_record_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveRecordDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveRecordDataRequest) ProtoMessage() {}

func (x *SaveRecordDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_record_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveRecordDataRequest.ProtoReflect.Descriptor instead.
func (*SaveRecordDataRequest) Descriptor() ([]byte, []int) {
	return file_record_data_proto_rawDescGZIP(), []int{0}
}

func (m *SaveRecordDataRequest) GetData() isSaveRecordDataRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *SaveRecordDataRequest) GetInfo() *RecordInfo {
	if x, ok := x.GetData().(*SaveRecordDataRequest_Info); ok {
		return x.Info
	}
	return nil
}

func (x *SaveRecordDataRequest) GetRecordChunk() []byte {
	if x, ok := x.GetData().(*SaveRecordDataRequest_RecordChunk); ok {
		return x.RecordChunk
	}
	return nil
}

type isSaveRecordDataRequest_Data interface {
	isSaveRecordDataRequest_Data()
}

type SaveRecordDataRequest_Info struct {
	Info *RecordInfo `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type SaveRecordDataRequest_RecordChunk struct {
	RecordChunk []byte `protobuf:"bytes,2,opt,name=record_chunk,json=recordChunk,proto3,oneof"`
}

func (*SaveRecordDataRequest_Info) isSaveRecordDataRequest_Data() {}

func (*SaveRecordDataRequest_RecordChunk) isSaveRecordDataRequest_Data() {}

type SaveRecordDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Size uint32 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *SaveRecordDataResponse) Reset() {
	*x = SaveRecordDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_record_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveRecordDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveRecordDataResponse) ProtoMessage() {}

func (x *SaveRecordDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_record_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveRecordDataResponse.ProtoReflect.Descriptor instead.
func (*SaveRecordDataResponse) Descriptor() ([]byte, []int) {
	return file_record_data_proto_rawDescGZIP(), []int{1}
}

func (x *SaveRecordDataResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SaveRecordDataResponse) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

var File_record_data_proto protoreflect.FileDescriptor

var file_record_data_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x67, 0x0a, 0x15, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x40, 0x0a, 0x16, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x32, 0x58, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x42, 0x06, 0x5a, 0x04, 0x2e,
	0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_record_data_proto_rawDescOnce sync.Once
	file_record_data_proto_rawDescData = file_record_data_proto_rawDesc
)

func file_record_data_proto_rawDescGZIP() []byte {
	file_record_data_proto_rawDescOnce.Do(func() {
		file_record_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_record_data_proto_rawDescData)
	})
	return file_record_data_proto_rawDescData
}

var file_record_data_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_record_data_proto_goTypes = []interface{}{
	(*SaveRecordDataRequest)(nil),  // 0: SaveRecordDataRequest
	(*SaveRecordDataResponse)(nil), // 1: SaveRecordDataResponse
	(*RecordInfo)(nil),             // 2: RecordInfo
}
var file_record_data_proto_depIdxs = []int32{
	2, // 0: SaveRecordDataRequest.info:type_name -> RecordInfo
	0, // 1: RecordDataService.SaveRecordData:input_type -> SaveRecordDataRequest
	1, // 2: RecordDataService.SaveRecordData:output_type -> SaveRecordDataResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_record_data_proto_init() }
func file_record_data_proto_init() {
	if File_record_data_proto != nil {
		return
	}
	file_record_info_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_record_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveRecordDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_record_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveRecordDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_record_data_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*SaveRecordDataRequest_Info)(nil),
		(*SaveRecordDataRequest_RecordChunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_record_data_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_record_data_proto_goTypes,
		DependencyIndexes: file_record_data_proto_depIdxs,
		MessageInfos:      file_record_data_proto_msgTypes,
	}.Build()
	File_record_data_proto = out.File
	file_record_data_proto_rawDesc = nil
	file_record_data_proto_goTypes = nil
	file_record_data_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RecordDataServiceClient is the client API for RecordDataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecordDataServiceClient interface {
	SaveRecordData(ctx context.Context, opts ...grpc.CallOption) (RecordDataService_SaveRecordDataClient, error)
}

type recordDataServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRecordDataServiceClient(cc grpc.ClientConnInterface) RecordDataServiceClient {
	return &recordDataServiceClient{cc}
}

func (c *recordDataServiceClient) SaveRecordData(ctx context.Context, opts ...grpc.CallOption) (RecordDataService_SaveRecordDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RecordDataService_serviceDesc.Streams[0], "/RecordDataService/SaveRecordData", opts...)
	if err != nil {
		return nil, err
	}
	x := &recordDataServiceSaveRecordDataClient{stream}
	return x, nil
}

type RecordDataService_SaveRecordDataClient interface {
	Send(*SaveRecordDataRequest) error
	CloseAndRecv() (*SaveRecordDataResponse, error)
	grpc.ClientStream
}

type recordDataServiceSaveRecordDataClient struct {
	grpc.ClientStream
}

func (x *recordDataServiceSaveRecordDataClient) Send(m *SaveRecordDataRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *recordDataServiceSaveRecordDataClient) CloseAndRecv() (*SaveRecordDataResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SaveRecordDataResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RecordDataServiceServer is the server API for RecordDataService service.
type RecordDataServiceServer interface {
	SaveRecordData(RecordDataService_SaveRecordDataServer) error
}

// UnimplementedRecordDataServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRecordDataServiceServer struct {
}

func (*UnimplementedRecordDataServiceServer) SaveRecordData(RecordDataService_SaveRecordDataServer) error {
	return status.Errorf(codes.Unimplemented, "method SaveRecordData not implemented")
}

func RegisterRecordDataServiceServer(s *grpc.Server, srv RecordDataServiceServer) {
	s.RegisterService(&_RecordDataService_serviceDesc, srv)
}

func _RecordDataService_SaveRecordData_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RecordDataServiceServer).SaveRecordData(&recordDataServiceSaveRecordDataServer{stream})
}

type RecordDataService_SaveRecordDataServer interface {
	SendAndClose(*SaveRecordDataResponse) error
	Recv() (*SaveRecordDataRequest, error)
	grpc.ServerStream
}

type recordDataServiceSaveRecordDataServer struct {
	grpc.ServerStream
}

func (x *recordDataServiceSaveRecordDataServer) SendAndClose(m *SaveRecordDataResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *recordDataServiceSaveRecordDataServer) Recv() (*SaveRecordDataRequest, error) {
	m := new(SaveRecordDataRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _RecordDataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RecordDataService",
	HandlerType: (*RecordDataServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SaveRecordData",
			Handler:       _RecordDataService_SaveRecordData_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "record_data.proto",
}
