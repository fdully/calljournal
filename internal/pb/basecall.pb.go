// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: basecall.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BaseCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid                 string               `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Username             string               `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	CallerIdName         string               `protobuf:"bytes,5,opt,name=caller_id_name,json=callerIdName,proto3" json:"caller_id_name,omitempty"`
	CallerIdNumber       string               `protobuf:"bytes,7,opt,name=caller_id_number,json=callerIdNumber,proto3" json:"caller_id_number,omitempty"`
	DestinationNumber    string               `protobuf:"bytes,10,opt,name=destination_number,json=destinationNumber,proto3" json:"destination_number,omitempty"`
	Direction            string               `protobuf:"bytes,13,opt,name=direction,proto3" json:"direction,omitempty"`
	StartStamp           *timestamp.Timestamp `protobuf:"bytes,16,opt,name=start_stamp,json=startStamp,proto3" json:"start_stamp,omitempty"`
	Duration             int64                `protobuf:"varint,19,opt,name=duration,proto3" json:"duration,omitempty"`
	Billsec              int64                `protobuf:"varint,22,opt,name=billsec,proto3" json:"billsec,omitempty"`
	RecordSeconds        int64                `protobuf:"varint,28,opt,name=record_seconds,json=recordSeconds,proto3" json:"record_seconds,omitempty"`
	RecordName           string               `protobuf:"bytes,31,opt,name=record_name,json=recordName,proto3" json:"record_name,omitempty"`
	StartEpoch           int64                `protobuf:"varint,37,opt,name=start_epoch,json=startEpoch,proto3" json:"start_epoch,omitempty"`
	AnswerEpoch          int64                `protobuf:"varint,40,opt,name=answer_epoch,json=answerEpoch,proto3" json:"answer_epoch,omitempty"`
	EndEpoch             int64                `protobuf:"varint,43,opt,name=end_epoch,json=endEpoch,proto3" json:"end_epoch,omitempty"`
	SipHangupDisposition string               `protobuf:"bytes,53,opt,name=sip_hangup_disposition,json=sipHangupDisposition,proto3" json:"sip_hangup_disposition,omitempty"`
	HangupCause          string               `protobuf:"bytes,56,opt,name=hangup_cause,json=hangupCause,proto3" json:"hangup_cause,omitempty"`
	SipTermStatus        string               `protobuf:"bytes,59,opt,name=sip_term_status,json=sipTermStatus,proto3" json:"sip_term_status,omitempty"`
}

func (x *BaseCall) Reset() {
	*x = BaseCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basecall_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseCall) ProtoMessage() {}

func (x *BaseCall) ProtoReflect() protoreflect.Message {
	mi := &file_basecall_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseCall.ProtoReflect.Descriptor instead.
func (*BaseCall) Descriptor() ([]byte, []int) {
	return file_basecall_proto_rawDescGZIP(), []int{0}
}

func (x *BaseCall) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *BaseCall) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *BaseCall) GetCallerIdName() string {
	if x != nil {
		return x.CallerIdName
	}
	return ""
}

func (x *BaseCall) GetCallerIdNumber() string {
	if x != nil {
		return x.CallerIdNumber
	}
	return ""
}

func (x *BaseCall) GetDestinationNumber() string {
	if x != nil {
		return x.DestinationNumber
	}
	return ""
}

func (x *BaseCall) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *BaseCall) GetStartStamp() *timestamp.Timestamp {
	if x != nil {
		return x.StartStamp
	}
	return nil
}

func (x *BaseCall) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *BaseCall) GetBillsec() int64 {
	if x != nil {
		return x.Billsec
	}
	return 0
}

func (x *BaseCall) GetRecordSeconds() int64 {
	if x != nil {
		return x.RecordSeconds
	}
	return 0
}

func (x *BaseCall) GetRecordName() string {
	if x != nil {
		return x.RecordName
	}
	return ""
}

func (x *BaseCall) GetStartEpoch() int64 {
	if x != nil {
		return x.StartEpoch
	}
	return 0
}

func (x *BaseCall) GetAnswerEpoch() int64 {
	if x != nil {
		return x.AnswerEpoch
	}
	return 0
}

func (x *BaseCall) GetEndEpoch() int64 {
	if x != nil {
		return x.EndEpoch
	}
	return 0
}

func (x *BaseCall) GetSipHangupDisposition() string {
	if x != nil {
		return x.SipHangupDisposition
	}
	return ""
}

func (x *BaseCall) GetHangupCause() string {
	if x != nil {
		return x.HangupCause
	}
	return ""
}

func (x *BaseCall) GetSipTermStatus() string {
	if x != nil {
		return x.SipTermStatus
	}
	return ""
}

type SaveBaseCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Basecall *BaseCall `protobuf:"bytes,1,opt,name=basecall,proto3" json:"basecall,omitempty"`
}

func (x *SaveBaseCallRequest) Reset() {
	*x = SaveBaseCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basecall_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveBaseCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveBaseCallRequest) ProtoMessage() {}

func (x *SaveBaseCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_basecall_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveBaseCallRequest.ProtoReflect.Descriptor instead.
func (*SaveBaseCallRequest) Descriptor() ([]byte, []int) {
	return file_basecall_proto_rawDescGZIP(), []int{1}
}

func (x *SaveBaseCallRequest) GetBasecall() *BaseCall {
	if x != nil {
		return x.Basecall
	}
	return nil
}

type SaveBaseCallRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*SaveBaseCallRecordRequest_Callpath
	//	*SaveBaseCallRecordRequest_RecordChunk
	Data isSaveBaseCallRecordRequest_Data `protobuf_oneof:"data"`
}

func (x *SaveBaseCallRecordRequest) Reset() {
	*x = SaveBaseCallRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basecall_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveBaseCallRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveBaseCallRecordRequest) ProtoMessage() {}

func (x *SaveBaseCallRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_basecall_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveBaseCallRecordRequest.ProtoReflect.Descriptor instead.
func (*SaveBaseCallRecordRequest) Descriptor() ([]byte, []int) {
	return file_basecall_proto_rawDescGZIP(), []int{2}
}

func (m *SaveBaseCallRecordRequest) GetData() isSaveBaseCallRecordRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *SaveBaseCallRecordRequest) GetCallpath() *CallPath {
	if x, ok := x.GetData().(*SaveBaseCallRecordRequest_Callpath); ok {
		return x.Callpath
	}
	return nil
}

func (x *SaveBaseCallRecordRequest) GetRecordChunk() []byte {
	if x, ok := x.GetData().(*SaveBaseCallRecordRequest_RecordChunk); ok {
		return x.RecordChunk
	}
	return nil
}

type isSaveBaseCallRecordRequest_Data interface {
	isSaveBaseCallRecordRequest_Data()
}

type SaveBaseCallRecordRequest_Callpath struct {
	Callpath *CallPath `protobuf:"bytes,1,opt,name=callpath,proto3,oneof"`
}

type SaveBaseCallRecordRequest_RecordChunk struct {
	RecordChunk []byte `protobuf:"bytes,2,opt,name=record_chunk,json=recordChunk,proto3,oneof"`
}

func (*SaveBaseCallRecordRequest_Callpath) isSaveBaseCallRecordRequest_Data() {}

func (*SaveBaseCallRecordRequest_RecordChunk) isSaveBaseCallRecordRequest_Data() {}

type SaveBaseCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Size uint32 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *SaveBaseCallResponse) Reset() {
	*x = SaveBaseCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basecall_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveBaseCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveBaseCallResponse) ProtoMessage() {}

func (x *SaveBaseCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_basecall_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveBaseCallResponse.ProtoReflect.Descriptor instead.
func (*SaveBaseCallResponse) Descriptor() ([]byte, []int) {
	return file_basecall_proto_rawDescGZIP(), []int{3}
}

func (x *SaveBaseCallResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SaveBaseCallResponse) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

var File_basecall_proto protoreflect.FileDescriptor

var file_basecall_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x62, 0x61, 0x73, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0e, 0x63, 0x64, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xf4, 0x04, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0e, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2d,
	0x0a, 0x12, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x69, 0x6c, 0x6c, 0x73, 0x65, 0x63, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x69, 0x6c, 0x6c, 0x73, 0x65, 0x63, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x25, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x28, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e,
	0x64, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65,
	0x6e, 0x64, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x69, 0x70, 0x5f, 0x68,
	0x61, 0x6e, 0x67, 0x75, 0x70, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x69, 0x70, 0x48, 0x61, 0x6e, 0x67,
	0x75, 0x70, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x68, 0x61, 0x6e, 0x67, 0x75, 0x70, 0x5f, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x38, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x61, 0x6e, 0x67, 0x75, 0x70, 0x43, 0x61, 0x75, 0x73, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x73, 0x69, 0x70, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x69, 0x70, 0x54, 0x65,
	0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3c, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65,
	0x42, 0x61, 0x73, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x08, 0x62, 0x61,
	0x73, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x22, 0x71, 0x0a, 0x19, 0x53, 0x61, 0x76, 0x65, 0x42, 0x61,
	0x73, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68,
	0x48, 0x00, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x70, 0x61, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0c,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3e, 0x0a, 0x14, 0x53, 0x61, 0x76,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x32, 0x99, 0x01, 0x0a, 0x0f, 0x42, 0x61,
	0x73, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a,
	0x0c, 0x53, 0x61, 0x76, 0x65, 0x42, 0x61, 0x73, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x14, 0x2e,
	0x53, 0x61, 0x76, 0x65, 0x42, 0x61, 0x73, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x42, 0x61, 0x73, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x12, 0x53, 0x61,
	0x76, 0x65, 0x42, 0x61, 0x73, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x1a, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x42, 0x61, 0x73, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x42, 0x61, 0x73, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x28, 0x01, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_basecall_proto_rawDescOnce sync.Once
	file_basecall_proto_rawDescData = file_basecall_proto_rawDesc
)

func file_basecall_proto_rawDescGZIP() []byte {
	file_basecall_proto_rawDescOnce.Do(func() {
		file_basecall_proto_rawDescData = protoimpl.X.CompressGZIP(file_basecall_proto_rawDescData)
	})
	return file_basecall_proto_rawDescData
}

var file_basecall_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_basecall_proto_goTypes = []interface{}{
	(*BaseCall)(nil),                  // 0: BaseCall
	(*SaveBaseCallRequest)(nil),       // 1: SaveBaseCallRequest
	(*SaveBaseCallRecordRequest)(nil), // 2: SaveBaseCallRecordRequest
	(*SaveBaseCallResponse)(nil),      // 3: SaveBaseCallResponse
	(*timestamp.Timestamp)(nil),       // 4: google.protobuf.Timestamp
	(*CallPath)(nil),                  // 5: CallPath
}
var file_basecall_proto_depIdxs = []int32{
	4, // 0: BaseCall.start_stamp:type_name -> google.protobuf.Timestamp
	0, // 1: SaveBaseCallRequest.basecall:type_name -> BaseCall
	5, // 2: SaveBaseCallRecordRequest.callpath:type_name -> CallPath
	1, // 3: BaseCallService.SaveBaseCall:input_type -> SaveBaseCallRequest
	2, // 4: BaseCallService.SaveBaseCallRecord:input_type -> SaveBaseCallRecordRequest
	3, // 5: BaseCallService.SaveBaseCall:output_type -> SaveBaseCallResponse
	3, // 6: BaseCallService.SaveBaseCallRecord:output_type -> SaveBaseCallResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_basecall_proto_init() }
func file_basecall_proto_init() {
	if File_basecall_proto != nil {
		return
	}
	file_cdr_data_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_basecall_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basecall_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveBaseCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basecall_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveBaseCallRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basecall_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveBaseCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_basecall_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*SaveBaseCallRecordRequest_Callpath)(nil),
		(*SaveBaseCallRecordRequest_RecordChunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_basecall_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_basecall_proto_goTypes,
		DependencyIndexes: file_basecall_proto_depIdxs,
		MessageInfos:      file_basecall_proto_msgTypes,
	}.Build()
	File_basecall_proto = out.File
	file_basecall_proto_rawDesc = nil
	file_basecall_proto_goTypes = nil
	file_basecall_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BaseCallServiceClient is the client API for BaseCallService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BaseCallServiceClient interface {
	SaveBaseCall(ctx context.Context, in *SaveBaseCallRequest, opts ...grpc.CallOption) (*SaveBaseCallResponse, error)
	SaveBaseCallRecord(ctx context.Context, opts ...grpc.CallOption) (BaseCallService_SaveBaseCallRecordClient, error)
}

type baseCallServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBaseCallServiceClient(cc grpc.ClientConnInterface) BaseCallServiceClient {
	return &baseCallServiceClient{cc}
}

func (c *baseCallServiceClient) SaveBaseCall(ctx context.Context, in *SaveBaseCallRequest, opts ...grpc.CallOption) (*SaveBaseCallResponse, error) {
	out := new(SaveBaseCallResponse)
	err := c.cc.Invoke(ctx, "/BaseCallService/SaveBaseCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *baseCallServiceClient) SaveBaseCallRecord(ctx context.Context, opts ...grpc.CallOption) (BaseCallService_SaveBaseCallRecordClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BaseCallService_serviceDesc.Streams[0], "/BaseCallService/SaveBaseCallRecord", opts...)
	if err != nil {
		return nil, err
	}
	x := &baseCallServiceSaveBaseCallRecordClient{stream}
	return x, nil
}

type BaseCallService_SaveBaseCallRecordClient interface {
	Send(*SaveBaseCallRecordRequest) error
	CloseAndRecv() (*SaveBaseCallResponse, error)
	grpc.ClientStream
}

type baseCallServiceSaveBaseCallRecordClient struct {
	grpc.ClientStream
}

func (x *baseCallServiceSaveBaseCallRecordClient) Send(m *SaveBaseCallRecordRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *baseCallServiceSaveBaseCallRecordClient) CloseAndRecv() (*SaveBaseCallResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SaveBaseCallResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BaseCallServiceServer is the server API for BaseCallService service.
type BaseCallServiceServer interface {
	SaveBaseCall(context.Context, *SaveBaseCallRequest) (*SaveBaseCallResponse, error)
	SaveBaseCallRecord(BaseCallService_SaveBaseCallRecordServer) error
}

// UnimplementedBaseCallServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBaseCallServiceServer struct {
}

func (*UnimplementedBaseCallServiceServer) SaveBaseCall(context.Context, *SaveBaseCallRequest) (*SaveBaseCallResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveBaseCall not implemented")
}
func (*UnimplementedBaseCallServiceServer) SaveBaseCallRecord(BaseCallService_SaveBaseCallRecordServer) error {
	return status.Errorf(codes.Unimplemented, "method SaveBaseCallRecord not implemented")
}

func RegisterBaseCallServiceServer(s *grpc.Server, srv BaseCallServiceServer) {
	s.RegisterService(&_BaseCallService_serviceDesc, srv)
}

func _BaseCallService_SaveBaseCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveBaseCallRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BaseCallServiceServer).SaveBaseCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BaseCallService/SaveBaseCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BaseCallServiceServer).SaveBaseCall(ctx, req.(*SaveBaseCallRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BaseCallService_SaveBaseCallRecord_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BaseCallServiceServer).SaveBaseCallRecord(&baseCallServiceSaveBaseCallRecordServer{stream})
}

type BaseCallService_SaveBaseCallRecordServer interface {
	SendAndClose(*SaveBaseCallResponse) error
	Recv() (*SaveBaseCallRecordRequest, error)
	grpc.ServerStream
}

type baseCallServiceSaveBaseCallRecordServer struct {
	grpc.ServerStream
}

func (x *baseCallServiceSaveBaseCallRecordServer) SendAndClose(m *SaveBaseCallResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *baseCallServiceSaveBaseCallRecordServer) Recv() (*SaveBaseCallRecordRequest, error) {
	m := new(SaveBaseCallRecordRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _BaseCallService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "BaseCallService",
	HandlerType: (*BaseCallServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveBaseCall",
			Handler:    _BaseCallService_SaveBaseCall_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SaveBaseCallRecord",
			Handler:       _BaseCallService_SaveBaseCallRecord_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "basecall.proto",
}
