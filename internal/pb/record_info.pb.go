// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: record_info.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RecordInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Addr string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Dirc string `protobuf:"bytes,3,opt,name=dirc,proto3" json:"dirc,omitempty"`
	Year string `protobuf:"bytes,4,opt,name=year,proto3" json:"year,omitempty"`
	Mont string `protobuf:"bytes,5,opt,name=mont,proto3" json:"mont,omitempty"`
	Rday string `protobuf:"bytes,6,opt,name=rday,proto3" json:"rday,omitempty"`
	Rnam string `protobuf:"bytes,7,opt,name=rnam,proto3" json:"rnam,omitempty"`
}

func (x *RecordInfo) Reset() {
	*x = RecordInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_record_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordInfo) ProtoMessage() {}

func (x *RecordInfo) ProtoReflect() protoreflect.Message {
	mi := &file_record_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordInfo.ProtoReflect.Descriptor instead.
func (*RecordInfo) Descriptor() ([]byte, []int) {
	return file_record_info_proto_rawDescGZIP(), []int{0}
}

func (x *RecordInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RecordInfo) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *RecordInfo) GetDirc() string {
	if x != nil {
		return x.Dirc
	}
	return ""
}

func (x *RecordInfo) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *RecordInfo) GetMont() string {
	if x != nil {
		return x.Mont
	}
	return ""
}

func (x *RecordInfo) GetRday() string {
	if x != nil {
		return x.Rday
	}
	return ""
}

func (x *RecordInfo) GetRnam() string {
	if x != nil {
		return x.Rnam
	}
	return ""
}

type SaveRecordInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *RecordInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *SaveRecordInfoRequest) Reset() {
	*x = SaveRecordInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_record_info_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveRecordInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveRecordInfoRequest) ProtoMessage() {}

func (x *SaveRecordInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_record_info_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveRecordInfoRequest.ProtoReflect.Descriptor instead.
func (*SaveRecordInfoRequest) Descriptor() ([]byte, []int) {
	return file_record_info_proto_rawDescGZIP(), []int{1}
}

func (x *SaveRecordInfoRequest) GetInfo() *RecordInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type SaveRecordInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *SaveRecordInfoResponse) Reset() {
	*x = SaveRecordInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_record_info_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveRecordInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveRecordInfoResponse) ProtoMessage() {}

func (x *SaveRecordInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_record_info_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveRecordInfoResponse.ProtoReflect.Descriptor instead.
func (*SaveRecordInfoResponse) Descriptor() ([]byte, []int) {
	return file_record_info_proto_rawDescGZIP(), []int{2}
}

func (x *SaveRecordInfoResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

var File_record_info_proto protoreflect.FileDescriptor

var file_record_info_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x98, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69,
	0x72, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x69, 0x72, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x65,
	0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6d, 0x6f, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x64, 0x61, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x64, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6e,
	0x61, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6e, 0x61, 0x6d, 0x22, 0x38,
	0x0a, 0x15, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x2c, 0x0a, 0x16, 0x53, 0x61, 0x76, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x32, 0x56, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x53,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e,
	0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x06,
	0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_record_info_proto_rawDescOnce sync.Once
	file_record_info_proto_rawDescData = file_record_info_proto_rawDesc
)

func file_record_info_proto_rawDescGZIP() []byte {
	file_record_info_proto_rawDescOnce.Do(func() {
		file_record_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_record_info_proto_rawDescData)
	})
	return file_record_info_proto_rawDescData
}

var file_record_info_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_record_info_proto_goTypes = []interface{}{
	(*RecordInfo)(nil),             // 0: RecordInfo
	(*SaveRecordInfoRequest)(nil),  // 1: SaveRecordInfoRequest
	(*SaveRecordInfoResponse)(nil), // 2: SaveRecordInfoResponse
}
var file_record_info_proto_depIdxs = []int32{
	0, // 0: SaveRecordInfoRequest.info:type_name -> RecordInfo
	1, // 1: RecordInfoService.SaveRecordInfo:input_type -> SaveRecordInfoRequest
	2, // 2: RecordInfoService.SaveRecordInfo:output_type -> SaveRecordInfoResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_record_info_proto_init() }
func file_record_info_proto_init() {
	if File_record_info_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_record_info_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_record_info_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveRecordInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_record_info_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveRecordInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_record_info_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_record_info_proto_goTypes,
		DependencyIndexes: file_record_info_proto_depIdxs,
		MessageInfos:      file_record_info_proto_msgTypes,
	}.Build()
	File_record_info_proto = out.File
	file_record_info_proto_rawDesc = nil
	file_record_info_proto_goTypes = nil
	file_record_info_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RecordInfoServiceClient is the client API for RecordInfoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecordInfoServiceClient interface {
	SaveRecordInfo(ctx context.Context, in *SaveRecordInfoRequest, opts ...grpc.CallOption) (*SaveRecordInfoResponse, error)
}

type recordInfoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRecordInfoServiceClient(cc grpc.ClientConnInterface) RecordInfoServiceClient {
	return &recordInfoServiceClient{cc}
}

func (c *recordInfoServiceClient) SaveRecordInfo(ctx context.Context, in *SaveRecordInfoRequest, opts ...grpc.CallOption) (*SaveRecordInfoResponse, error) {
	out := new(SaveRecordInfoResponse)
	err := c.cc.Invoke(ctx, "/RecordInfoService/SaveRecordInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecordInfoServiceServer is the server API for RecordInfoService service.
type RecordInfoServiceServer interface {
	SaveRecordInfo(context.Context, *SaveRecordInfoRequest) (*SaveRecordInfoResponse, error)
}

// UnimplementedRecordInfoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRecordInfoServiceServer struct {
}

func (*UnimplementedRecordInfoServiceServer) SaveRecordInfo(context.Context, *SaveRecordInfoRequest) (*SaveRecordInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveRecordInfo not implemented")
}

func RegisterRecordInfoServiceServer(s *grpc.Server, srv RecordInfoServiceServer) {
	s.RegisterService(&_RecordInfoService_serviceDesc, srv)
}

func _RecordInfoService_SaveRecordInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveRecordInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecordInfoServiceServer).SaveRecordInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RecordInfoService/SaveRecordInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecordInfoServiceServer).SaveRecordInfo(ctx, req.(*SaveRecordInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RecordInfoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RecordInfoService",
	HandlerType: (*RecordInfoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveRecordInfo",
			Handler:    _RecordInfoService_SaveRecordInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "record_info.proto",
}
